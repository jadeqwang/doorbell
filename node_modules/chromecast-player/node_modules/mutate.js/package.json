{
  "name": "mutate.js",
  "version": "0.2.0",
  "description": "overloading javascript functions done easy",
  "main": "mutate.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/xat/mutate.js"
  },
  "keywords": [
    "overloading",
    "mutate"
  ],
  "author": {
    "name": "Simon Kusterer"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/xat/mutate.js/issues"
  },
  "homepage": "https://github.com/xat/mutate.js",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "gulp-uglify": "^0.2.1",
    "gulp-concat": "^2.2.0",
    "gulp": "^3.6.0"
  },
  "readme": "## mutate.js\n\nmutate.js brings function overloading to javascript.\n\n### Sample\n\n```javascript\n\nvar sum = mutate(function() {\n    return Array.prototype.reduce.call(arguments, function(memo, val) {\n        return memo + val;\n    }, 0);\n})\n.method(['array'], function(done, arr) {\n    return done.apply(done, arr);\n})\n.method(['object'], function(done, obj) {\n    var arr = [];\n    for (var key in obj) {\n        arr.push(obj[key]);\n    }\n    return done.apply(done, arr);\n})\n.close();\n\nsum(1, 2, 3); // => 6\nsum([1, 2, 3]); // => 6\nsum({ prop1: 1, prop2: 2, prop3: 3}); // => 6\n\n```\n\n### Installation\n\n```\nbower install mutate.js\n```\n\n\n## License\nCopyright (c) 2014 Simon Kusterer\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "mutate.js@0.2.0",
  "_from": "mutate.js@^0.2.0"
}
